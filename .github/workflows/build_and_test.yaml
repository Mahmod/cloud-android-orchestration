name: Build and test

on: [pull_request, push]

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.19.0'] # Add more versions as needed
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go Environment
        uses: ./.github/actions/setup-go
        with:
          go-version: ${{ matrix.go-version }}
      - name: Build
        run: go build ./...
      - name: Test
        run: go test ./...

  build-debian-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.19.0'] # Ensure these versions are compatible with your Debian image
    container:
      image: debian:stable-20211011
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go Environment
        uses: ./.github/actions/setup-go
        with:
          go-version: ${{ matrix.go-version }}
      - name: Setup APT
        run: apt update -y && apt upgrade -y
      - name: Install Build Dependencies
        run: apt install -y git devscripts config-package-dev debhelper-compat golang
      - name: Build Debian Packages
        run: cd build/package && dpkg-buildpackage -i -uc -us -b
      - name: Install cvdremote Debian Package
        run: dpkg -i build/cvdremote_*_*64.deb || apt-get install -f -y

  check-format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.19.0']
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go Environment
        uses: ./.github/actions/setup-go
        with:
          go-version: ${{ matrix.go-version }}
      - name: Check Format
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then echo "Go files must be formatted with gofmt"; exit 1; fi
